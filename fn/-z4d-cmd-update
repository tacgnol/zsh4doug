#!/usr/bin/env zsh

eval "$_z4d_opt"
-z4d-check-core-params || return

if (( ARGC )); then
  print -Pru2 -- '%F{3}z4d%f: unexpected %F{1}update%f argument'
  return '_z4d_err()'
fi

if (( _z4d_dangerous_root )); then
  print -Pru2 -- "%F{3}z4d%f: refusing to %Bupdate%b as %F{1}root%f"
  return 1
fi

local old=$Z4D.old.$$
local new=$Z4D.new.$$

{
  zf_rm -rf -- $old $new   || return
  zf_mkdir -p -- $new      || return
  print -n >$new/.updating || return

  Z4D_UPDATING=$Z4D Z4D=$new </dev/null >/dev/null $_z4d_exe -ic '
    (( $? )) && "exit" "1"
    "builtin" "emulate" "zsh" "-o" "no_aliases"
    [[ $Z4D == '${(q)new}' ]] || exit 0
    print -n >$Z4D/tmp/update-successful' || return

  if [[ ! -e $new/tmp/update-successful ]]; then
    local home=~
    local zdotdir=${${${(q)ZDOTDIR}/#${(q)home}/'~'}//\%/%%}
    local z4d=${${${(q)Z4D}/#${(q)home}/'~'}//\%/%%}
    print -Pru2 -- '%F{3}z4d%f: %B$Z4D%b %F{1}does not propagate%f through %U.zshrc%u'
    print -Pru2 -- ''
    print -Pru2 -- 'Change %U'$zdotdir'/.zshrc%u to keep %BZ4D%b intact if already set.'
    print -Pru2 -- ''
    print -Pru2 -- 'For example:'
    print -Pru2 -- ''
    print -Pru2 -- '  %F{2}:%f %F{3}"${Z4D:=${XDG_CACHE_HOME:-$HOME/.cache}/zsh4doug}"%f'
    print -Pru2 -- ''
    print -Pru2 -- 'Note: The leading colon (%F{2}:%f) is necessary.'
    return 1
  fi

  zf_rm -- $new/tmp/update-successful                || return
  zf_rm -- $new/.updating                            || return
  -z4d-mv $Z4D $old 2>/dev/null || zf_rm -rf -- $Z4D || return
  if [[ -e $Z4D ]]; then
    local home=~
    local z4d=${${${(q)Z4D}/#${(q)home}/'~'}//\%/%%}
    print -Pru2 -- '%F{3}z4d%f: %F{1}cannot delete %U'$z4d'%u%f'
    print -Pru2 -- ''
    print -Pru2 -- 'This might help:'
    print -Pru2 -- ''
    print -Pru2 -- '  %F{2}%Ucommand%u %Usudo%u rm%f -rf -- %U'$z4d'%u && %U%F{2}exec%u zsh%f'
    print -Pru2 -- ''
    print -Pru2 -- '%F{3}z4d%f: attempting to recover'
    if [[ ! -e $Z4D/stickycache ]]; then
      command cp -r -- $new/stickycache $Z4D/stickycache || true
    fi
    if [[ -o zle ]]; then
      exec -- $_z4d_exe -i || return
    else
      exec -- $_z4d_exe -i --no-zle || return
    fi
  fi
  -z4d-mv $new $Z4D || return
} always {
  if (( $? )); then
    -z4d-error-command update
  fi
  zf_rm -rf -- $old $new || return
}

print -Pru2 -- "%F{3}z4d%f: %Bupdate successful%b"
print -Pru2 -- "%F{3}z4d%f: restarting %F{2}zsh%f"
if [[ -o zle ]]; then
  exec -- $_z4d_exe -i || return
else
  exec -- $_z4d_exe -i --no-zle || return
fi
